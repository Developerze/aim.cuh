--// Preventing Multiple Processes

pcall(function()
    getgenv().Aimbot.Functions:Exit()
end)

--// Environment

getgenv().Aimbot = {}
local Environment = getgenv().Aimbot

--// Services

local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Camera = game:GetService("Workspace").CurrentCamera

--// Variables

local LocalPlayer = Players.LocalPlayer
local Title = "aim.cuh"
local Running = false
local ServiceConnections = {}

--// Support Functions

local mousemoverel = mousemoverel or (Input and Input.MouseMove)

--// GUI Creation
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local TitleBar = Instance.new("Frame")
local TitleText = Instance.new("TextLabel")
local ToggleButton = Instance.new("TextButton")
local TeamCheckToggle = Instance.new("TextButton")
local WallCheckToggle = Instance.new("TextButton")

-- GUI Setup
ScreenGui.Parent = game:GetService("CoreGui")
ScreenGui.Name = "AimCuhGUI"

MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.BorderColor3 = Color3.fromRGB(255, 0, 0)
MainFrame.BorderSizePixel = 2
MainFrame.Position = UDim2.new(0.8, 0, 0.3, 0)
MainFrame.Size = UDim2.new(0, 220, 0, 200)
MainFrame.Active = true
MainFrame.Draggable = true

TitleBar.Name = "TitleBar"
TitleBar.Parent = MainFrame
TitleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
TitleBar.BorderColor3 = Color3.fromRGB(255, 0, 0)
TitleBar.Size = UDim2.new(1, 0, 0, 35)

TitleText.Name = "TitleText"
TitleText.Parent = TitleBar
TitleText.BackgroundTransparency = 1
TitleText.Size = UDim2.new(1, 0, 1, 0)
TitleText.Font = Enum.Font.GothamBold
TitleText.Text = "aim.cuh"
TitleText.TextColor3 = Color3.fromRGB(255, 0, 0)
TitleText.TextSize = 20

ToggleButton.Name = "ToggleButton"
ToggleButton.Parent = MainFrame
ToggleButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
ToggleButton.BorderColor3 = Color3.fromRGB(255, 0, 0)
ToggleButton.Position = UDim2.new(0.1, 0, 0.2, 0)
ToggleButton.Size = UDim2.new(0.8, 0, 0, 35)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.Text = "Enabled: OFF"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextSize = 16

-- Add toggle functionality
local enabled = false
ToggleButton.MouseButton1Click:Connect(function()
    enabled = not enabled
    ToggleButton.Text = "Enabled: " .. (enabled and "ON" or "OFF")
    Environment.Settings.Enabled = enabled
end)

TeamCheckToggle.Name = "TeamCheckToggle"
TeamCheckToggle.Parent = MainFrame
TeamCheckToggle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
TeamCheckToggle.BorderColor3 = Color3.fromRGB(255, 0, 0)
TeamCheckToggle.Position = UDim2.new(0.1, 0, 0.4, 0)
TeamCheckToggle.Size = UDim2.new(0.8, 0, 0, 35)
TeamCheckToggle.Font = Enum.Font.GothamBold
TeamCheckToggle.Text = "Team Check: OFF"
TeamCheckToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
TeamCheckToggle.TextSize = 14

-- Add team check toggle functionality
local teamCheckEnabled = false
TeamCheckToggle.MouseButton1Click:Connect(function()
    teamCheckEnabled = not teamCheckEnabled
    TeamCheckToggle.Text = "Team Check: " .. (teamCheckEnabled and "ON" or "OFF")
    Environment.Settings.TeamCheck = teamCheckEnabled
end)

WallCheckToggle.Name = "WallCheckToggle"
WallCheckToggle.Parent = MainFrame
WallCheckToggle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
WallCheckToggle.BorderColor3 = Color3.fromRGB(255, 0, 0)
WallCheckToggle.Position = UDim2.new(0.1, 0, 0.6, 0)
WallCheckToggle.Size = UDim2.new(0.8, 0, 0, 35)
WallCheckToggle.Font = Enum.Font.GothamBold
WallCheckToggle.Text = "Wall Check: OFF"
WallCheckToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
WallCheckToggle.TextSize = 14

-- Add wall check toggle functionality
local wallCheckEnabled = false
WallCheckToggle.MouseButton1Click:Connect(function()
    wallCheckEnabled = not wallCheckEnabled
    WallCheckToggle.Text = "Wall Check: " .. (wallCheckEnabled and "ON" or "OFF")
    Environment.Settings.WallCheck = wallCheckEnabled
end)

-- Add RightShift to toggle UI visibility
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.RightShift then
        MainFrame.Visible = not MainFrame.Visible
    end
end)

--// Script Settings

Environment.Settings = {
    Enabled = true,
    TeamCheck = false,
    AliveCheck = true,
    WallCheck = false,
    LockPart = "Head",
    Smoothness = 0.25 -- Added smoothness setting
}

--// Core Functions

local function GetClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge
    local maxDistance = 150 -- Maximum distance to target

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            if player.Character and player.Character:FindFirstChild(Environment.Settings.LockPart) then
                if Environment.Settings.TeamCheck and player.Team == LocalPlayer.Team then continue end
                if Environment.Settings.AliveCheck and player.Character:FindFirstChildOfClass("Humanoid").Health <= 0 then continue end
                if Environment.Settings.WallCheck then
                    local ray = Ray.new(Camera.CFrame.Position, (player.Character[Environment.Settings.LockPart].Position - Camera.CFrame.Position).Unit * 500)
                    local hit = workspace:FindPartOnRayWithIgnoreList(ray, {LocalPlayer.Character, Camera})
                    if hit and hit:IsDescendantOf(player.Character) == false then continue end
                end

                local pos = Camera:WorldToViewportPoint(player.Character[Environment.Settings.LockPart].Position)
                if pos.Z < 0 then continue end -- Don't target players behind the camera
                
                local screenPos = Vector2.new(pos.X, pos.Y)
                local mousePos = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
                local magnitude = (screenPos - mousePos).magnitude
                
                if magnitude <= maxDistance and magnitude < shortestDistance then
                    closestPlayer = player
                    shortestDistance = magnitude
                end
            end
        end
    end

    return closestPlayer
end

--// Main Loop

local function Lerp(a, b, t)
    return a + (b - a) * t
end

RunService.RenderStepped:Connect(function()
    if Environment.Settings.Enabled and UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
        local target = GetClosestPlayer()
        if target then
            local pos = Camera:WorldToViewportPoint(target.Character[Environment.Settings.LockPart].Position)
            local mousePos = UserInputService:GetMouseLocation()
            
            -- Smooth movement using lerp
            local targetX = Lerp(mousePos.X, pos.X, Environment.Settings.Smoothness)
            local targetY = Lerp(mousePos.Y, pos.Y, Environment.Settings.Smoothness)
            
            mousemoverel(targetX - mousePos.X, targetY - mousePos.Y)
        end
    end
end)
